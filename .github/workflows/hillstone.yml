name: hillstone-watch

on:
  schedule:
    - cron: "*/11 * * * *"      # runs about every 11 minutes
    - cron: "*/3 20-23 * * *"   # runs every 5 minutes from 4 PM - 10 PM EST

  workflow_dispatch:            # lets you run it manually from the Actions tab

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install requests
      - name: Run watcher
        env:
          MERCHANT_ID: "278278"
          PARTY_SIZES: "2,4"          # scan both 2 and 4
          ENABLE_DINNER: "true"       # "true" / "false"
          ENABLE_LUNCH: "true"       # set "true" if you want lunch too
          DAYS_AHEAD: "9"             # how many days ahead to look for tables
          STEP_MIN: "15"              # 15-minute grid
          LINK_BASE: ${{ secrets.LINK_BASE }}   # booking page URL
          RENOTIFY_MINUTES: "180"   # re-notify cooldown (in minutes)
          # --- Re-notify suppression knobs ---
          LUNCH_MAX_DAYS: "2"        # no re-notify when >2 days away (first sighting only)
          DINNER_MAX_DAYS: "3"       # no re-notify when >3 days away (first sighting only)
          MILESTONES: ""        # re-notify when lead_days crosses these buckets (e.g., 3→1→0)
          DAILY_CAP_LUNCH: "1"         # max lunch alerts per slot per calendar day
          DAILY_CAP_DINNER: "0"        # 0 = no cap (allow multiple dinner alerts same day)

          # --- Notifications (pick one or both) ---
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

          # --- GIST SETUP FOR DEDUPING --- 
          GIST_ID: ${{ secrets.GIST_ID }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}

          # --- DEBUGGING TEMP ---
          DEBUG: "true"
          TEST_ALERT: "false"
          #TEST_FIXED_KEY: "Thu Oct 09|7:30 PM|2|Dinner"
        run: python watcher.py

      - name: Commit logs (if any)
        run: |
          if [ -f availability_log.csv ]; then
            git config user.email "actions@github.com"
            git config user.name "GitHub Actions"
            git add availability_log.csv
            git commit -m "update logs [skip ci]" || echo "no changes"
            git push || echo "push skipped"
          fi

